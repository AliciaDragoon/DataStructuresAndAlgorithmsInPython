# 拥有一颗非常浅的继承树会有哪些潜在的效率劣势？也就是说，有一个很大的类的集合，A、B、C……所有的这些类拓展来自一个单一的类Z。
# 浅继承树（星型结构）的主要潜在效率劣势：
# 内存浪费与缓存失效： 基类膨胀导致每个对象携带大量无用数据，严重降低内存利用率和 CPU 缓存效率（最核心问题）；
# 虚函数表膨胀与调用开销： 庞大的基类虚函数表污染所有子类 vtable，增加内存占用，并可能增加虚调用开销（缓存未命中）或阻碍去虚拟化优化；
# RTTI 操作变慢： 平坦的类型结构导致类型检查/转换可能需要在大量同级类型中线性搜索或使用大型跳转表；
# 对象构造开销： 初始化庞大基类部分增加对象创建成本；
# 编译与维护效率低下（间接）： 高耦合导致编译时间激增、修改风险高、代码难以维护，间接导致低效代码产生或优化困难。